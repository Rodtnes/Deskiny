#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            bindings = <
&kp LSHFT         &kp Q  &kp W  &kp F           &kp P         &kp B                                       &kp J            &kp L      &kp U      &kp Y    &kp LC(LA(Z))  &kp LC(LA(W))
&kp LEFT_CONTROL  &kp A  &kp R  &kp S           &kp T         &kp G                                       &kp M            &kp N      &kp E      &kp I    &kp O          &kp LC(LA(L))
                  &kp Z  &kp X  &kp C           &kp D         &kp V                                       &kp K            &kp H      &kp COMMA  &kp DOT  &kp MINUS
                                &lt 4 LEFT_GUI  &lt 1 DELETE  &mt LEFT_WIN SPACE  &lt 3 ENTER  &lt 3 ESC  &lt 2 BACKSPACE  &lt 1 TAB  &mo 4
            >;
        };

        NAV {
            bindings = <
&kp LSHFT  &none  &none      &kp LC(LS(V))  &kp LC(LS(C))  &none                   &kp HOME  &kp PAGE_DOWN  &kp PG_UP  &kp END    &none  &none
&kp LCTRL  &none  &kp LC(X)  &kp LC(A)      &kp LC(C)      &none                   &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &none  &none
           &none  &none      &none          &none          &none                   &none     &none          &none      &none      &none
                             &trans         &trans         &trans  &trans  &trans  &trans    &trans         &trans
            >;
        };

        SYM {
            bindings = <
&trans  &kp C_PREV       &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP                  &kp LBRC      &kp RBRC      &kp MINUS     &kp LS(EQUAL)  &kp LS(DQT)   &kp PIPE
&trans  &kp AMPERSAND    &kp PERCENT       &kp CARET   &kp SEMICOLON      &kp COLON                        &kp LS(LPAR)  &kp LS(RPAR)  &kp PLUS      &kp STAR       &kp SQT       &kp DOLLAR
        &kp EXCLAMATION  &kp AT_SIGN       &kp HASH    &kp PIPE           &kp TILDE                        &kp LBKT      &kp RBKT      &kp LS(FSLH)  &kp BSLH       &kp LS(AMPS)
                                           &trans      &trans             &trans           &trans  &trans  &trans        &trans        &trans
            >;
        };

        NUM {
            bindings = <
&trans  &kp FSLH  &kp N7  &kp N8  &kp N9  &kp MINUS                  &kp FSLH  &kp N7  &kp N8  &kp N9  &kp MINUS  &none
&trans  &kp STAR  &kp N4  &kp N5  &kp N6  &kp PLUS                   &kp STAR  &kp N4  &kp N5  &kp N6  &kp PLUS   &none
        &kp N0    &kp N1  &kp N2  &kp N3  &kp EQUAL                  &kp N0    &kp N1  &kp N2  &kp N3  &kp EQUAL
                          &trans  &trans  &trans     &trans  &trans  &trans    &trans  &trans
            >;
        };

        BL_FN {
            bindings = <
&bt BT_CLR      &none  &none  &none       &none       &bootloader                  &bootloader  &kp F1  &kp F2   &kp F3   &kp F4   &none
&bt BT_CLR_ALL  &none  &none  &bt BT_PRV  &bt BT_NXT  &none                        &none        &kp F5  &kp F6   &kp F7   &kp F8   &none
                &none  &none  &none       &none       &none                        &none        &kp F9  &kp F10  &kp F11  &kp F12
                              &trans      &trans      &trans       &trans  &trans  &trans       &trans  &trans
            >;
        };
    };
};
